Node* connect(Node* root) {
    
    if (root == nullptr) {
        return nullptr;
    }        
    
    queue<pair<Node*, int>> q;
    q.push(pair<Node*, int> (root, 0));
    
    pair<Node*, int> prev = pair<Node*, int> (root, 0);
    
    while (!q.empty()) {
        auto node = q.front();
        q.pop();
        
        if (prev.first != root && prev.second == node.second) {
            prev.first->next = node.first;
        }
        
        if (node.first->left) {
            q.push(pair<Node*, int> (node.first->left, node.second + 1));
        }
        
        if (node.first->right) {
            q.push(pair<Node*, int> (node.first->right, node.second + 1));
        }
        
        prev = node;
    }
    
    return root;
}