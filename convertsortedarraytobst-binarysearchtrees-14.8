TreeNode* helper(vector<int>& nums, int start, int end) {
    if (start > end) {
        return nullptr;
    }
    
    int mid = start + (end - start) / 2;
    
    TreeNode* midNode = new TreeNode();
    midNode->val = nums[mid];
    midNode->left = helper(nums, start, mid - 1);
    midNode->right = helper(nums, mid + 1, end);
    
    return midNode;
}

TreeNode* sortedArrayToBST(vector<int>& nums) {
    return helper(nums, 0, nums.size()  - 1);
}I 