struct IntervalComparator
{
    bool operator()(vector<int> &a, vector<int>& b) const {
        return a[0] < b[0];
    }
};
    

vector<vector<int>> merge(vector<vector<int>>& intervals) {
    
    vector<vector<int>> res;
    
    if (intervals.empty()) {
        return res;
    }
    
    sort(intervals.begin(), intervals.end(), IntervalComparator());
    
    res.push_back(intervals[0]);
    
    for (int i = 1; i < intervals.size(); i++) {
        if (res[res.size() - 1][1] >= intervals[i][0]) {
            res[res.size() - 1][1] = max(res[res.size() - 1][1], intervals[i][1]);
        } else {
            res.push_back(intervals[i]);
        }
    }
    
    return res;
}