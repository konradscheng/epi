bool isPalindrome(ListNode* head) {

	// finding mid
    ListNode* slow, *fast;
    slow = fast = head;
    while (fast != nullptr and fast->next != nullptr) {
        slow = slow->next;
        fast = fast->next->next;
    }
	
	// Reversing the list from mid to end
    ListNode* prev = nullptr;
    ListNode* curr = slow;
    ListNode* nxt;
    while (curr != nullptr) {
        nxt = curr->next;
        curr->next = prev;
        prev = curr;
        curr = nxt;
    }
    slow = nullptr;
    
	// Comparing the values from both the ends
    ListNode* begin = head;
    ListNode* end = prev;
    while (begin != nullptr and end != nullptr) {
        if (begin->val != end->val) {
            return false;
        }
        begin = begin->next;
        end = end->next;
    }
    return true;
}