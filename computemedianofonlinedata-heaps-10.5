vector<double> OnlineMedian(vector<int>& A) {
	vector<double> res;

	priority_queue<int, vector<int>, greater<>> min_heap;
	priority_queue<int, vector<int>, less<>> max_heap;

	for (int i = 0 ; i < A.size(); i++) {
		min_heap.push(A[i]);
		int top = min_heap.top();
		min_heap.pop();
		max_heap.push(top);

		if (min_heap.size() < max_heap.size()) {
			min_heap.push(max_heap.top());
			max_heap.pop();
		}

		if (max_heap.size() == min_heap.size())	
			res.push((min_heap.top() + max_heap.top()) / 2);
		} else {
			res.push(min_heap.top());
		}
	}

	return res;
}