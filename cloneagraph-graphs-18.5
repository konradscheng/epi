Node* cloneGraph(Node* node) {
    
    if (node == nullptr) {
        return node;
    }
    
    Node* retVal = nullptr;
    
    queue<Node*> q;
    q.push(node);
    
    unordered_map<Node*, Node*> visited;
    visited.insert(pair<Node*, Node*> (node, new Node(node->val)));
    
    retVal = visited.begin()->second;
    
    while(!q.empty()) {
        Node* front = q.front();
        q.pop();
        
        for (int i = 0; i < front->neighbors.size(); ++i) {
            
            if (visited.find(front->neighbors[i]) == visited.end()) {
                q.push(front->neighbors[i]);
                visited.insert(pair<Node*, Node*> (front->neighbors[i], new Node(front->neighbors[i]->val)));
            }
            
            visited[front]->neighbors.push_back(visited[front->neighbors[i]]);
        }
    }
    
    return retVal;
}